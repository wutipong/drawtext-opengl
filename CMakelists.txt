cmake_minimum_required(VERSION 3.17)

project(drawtext-opengl)

add_executable(main 
	"main.cpp"
    imgui_impl_opengl3.cpp imgui_impl_opengl3.h
    imgui_impl_sdl.cpp imgui_impl_sdl.h
 "context.hpp" "scene.cpp" "scene.hpp" "test_scene.hpp" "test_scene.cpp" "shader.hpp" "shader.cpp" "font.cpp" "font.hpp" "glyph.cpp" "glyph.hpp")

find_package(freetype CONFIG REQUIRED)
find_package(GLEW REQUIRED)
find_package(SDL2 CONFIG REQUIRED)
find_package(imgui CONFIG REQUIRED)
find_package(harfbuzz CONFIG REQUIRED)

target_link_libraries(main PRIVATE SDL2::SDL2 SDL2::SDL2main imgui::imgui freetype harfbuzz::harfbuzz GLEW::GLEW)

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/Sarabun/fonts/Sarabun-Regular.ttf
     DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/source-sans-pro/TTF/SourceSansPro-Regular.ttf
     DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/mplus-fonts/fonts/mplus-1c-regular.ttf
     DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_custom_target(resources ALL SOURCES shaders/glyph.frag shaders/glyph.vert)

add_custom_command(TARGET resources PRE_BUILD
                   COMMAND ${CMAKE_COMMAND} -E copy_directory
                       ${CMAKE_SOURCE_DIR}/shaders/ ${CMAKE_CURRENT_BINARY_DIR})
